export default (): string => "module GraphQL.Operations.AST exposing (..)\n\n\ntype alias Document =\n    { definitions : List Definition\n    }\n\n\ntype Definition\n    = Fragment FragmentDetails\n    | Operation OperationDetails\n\n\ntype alias FragmentDetails =\n    { name : Name\n    , typeCondition : Name\n    , directives : List Directive\n    , selection : List Selection\n    }\n\n\ntype alias OperationDetails =\n    { operationType : OperationType\n    , name : Maybe Name\n    , variableDefinitions : List VariableDefinition\n    , directives : List Directive\n    , fields : List Selection\n    }\n\n\ntype OperationType\n    = Query\n    | Mutation\n\n\ntype alias VariableDefinition =\n    { variable : Variable\n    , type_ : Type\n    , defaultValue : Maybe Value\n    }\n\n\ntype alias Variable =\n    { name : Name\n    }\n\n\ntype Selection\n    = Field FieldDetails\n    | FragmentSpreadSelection FragmentSpread\n    | InlineFragmentSelection InlineFragment\n\n\ntype alias FieldDetails =\n    { alias_ : Maybe Name\n    , name : Name\n    , arguments : List Argument\n    , directives : List Directive\n    , selection : List Selection\n    }\n\n\ntype alias FragmentSpread =\n    { name : Name\n    , directives : List Directive\n    }\n\n\ntype alias InlineFragment =\n    { tag : Name\n    , directives : List Directive\n    , selection : List Selection\n    }\n\n\ntype Name\n    = Name String\n\n\nnameToString : Name -> String\nnameToString (Name str) =\n    str\n\n\ntype Value\n    = Str String\n    | Integer Int\n    | Decimal Float\n    | Boolean Bool\n    | Null\n    | Enum Name\n    | Var Variable\n    | Object (List ( Name, Value ))\n    | ListValue (List Value)\n\n\ntype alias Argument =\n    { name : Name\n    , value : Value\n    }\n\n\ntype alias Directive =\n    { name : Name\n    , arguments : List Argument\n    }\n\n\ntype Type\n    = Type_ Name\n    | List_ Type\n    | Nullable Type\n"