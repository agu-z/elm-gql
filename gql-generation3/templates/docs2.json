[{"name":"GraphQL.Engine","comment":"\n\n@docs nullable, field, fieldWith, object, objectWith\n\n@docs enum, maybeEnum\n\n@docs union\n\n@docs Selection, select, with, map, map2, recover\n\n@docs arg, Optional, optional\n\n@docs Query, query, Mutation, mutation\n\n@docs queryString\n\n@docs Argument, maybeScalarEncode\n\n@docs Id, encodeId, decodeId\n\n@docs encodeOptionals\n\n","unions":[{"name":"Argument","comment":" We can also accept:\n\n  - Enum values (unquoted)\n  - custom scalars\n\nBut we can define anything else in terms of these:\n\n","args":[],"cases":[["ArgValue",["Json.Encode.Value","String.String"]],["Var",["String.String"]]]},{"name":"Id","comment":" ","args":[],"cases":[]},{"name":"Mutation","comment":" ","args":[],"cases":[]},{"name":"Optional","comment":" ","args":["arg"],"cases":[]},{"name":"Query","comment":" ","args":[],"cases":[]},{"name":"Selection","comment":" ","args":["source","selected"],"cases":[]}],"aliases":[],"values":[{"name":"arg","comment":" The encoded value and the name of the expected type for this argument\n","type":"Json.Encode.Value -> String.String -> GraphQL.Engine.Argument"},{"name":"decodeId","comment":" ","type":"Json.Decode.Decoder GraphQL.Engine.Id"},{"name":"encodeId","comment":" ","type":"GraphQL.Engine.Id -> Json.Decode.Value"},{"name":"encodeOptionals","comment":" ","type":"List.List (GraphQL.Engine.Optional arg) -> List.List ( String.String, GraphQL.Engine.Argument )"},{"name":"enum","comment":" ","type":"List.List ( String.String, item ) -> Json.Decode.Decoder item"},{"name":"field","comment":" ","type":"String.String -> Json.Decode.Decoder data -> GraphQL.Engine.Selection source data"},{"name":"fieldWith","comment":" ","type":"List.List ( String.String, GraphQL.Engine.Argument ) -> String.String -> Json.Decode.Decoder data -> GraphQL.Engine.Selection source data"},{"name":"map","comment":" ","type":"(a -> b) -> GraphQL.Engine.Selection source a -> GraphQL.Engine.Selection source b"},{"name":"map2","comment":" ","type":"(a -> b -> c) -> GraphQL.Engine.Selection source a -> GraphQL.Engine.Selection source b -> GraphQL.Engine.Selection source c"},{"name":"maybeEnum","comment":" ","type":"List.List ( String.String, item ) -> Json.Decode.Decoder (Maybe.Maybe item)"},{"name":"maybeScalarEncode","comment":" ","type":"(a -> Json.Encode.Value) -> Maybe.Maybe a -> Json.Encode.Value"},{"name":"mutation","comment":" ","type":"GraphQL.Engine.Selection GraphQL.Engine.Mutation msg -> { headers : List.List Http.Header, url : String.String, timeout : Maybe.Maybe Basics.Float, tracker : Maybe.Maybe String.String } -> Platform.Cmd.Cmd (Result.Result Http.Error msg)"},{"name":"nullable","comment":" Used in generated code to handle maybes\n","type":"GraphQL.Engine.Selection source data -> GraphQL.Engine.Selection source (Maybe.Maybe data)"},{"name":"object","comment":" ","type":"String.String -> GraphQL.Engine.Selection source data -> GraphQL.Engine.Selection otherSource data"},{"name":"objectWith","comment":" ","type":"List.List ( String.String, GraphQL.Engine.Argument ) -> String.String -> GraphQL.Engine.Selection source data -> GraphQL.Engine.Selection otherSource data"},{"name":"optional","comment":"\n\n    Encode the nullability in the argument itself.\n\n","type":"String.String -> GraphQL.Engine.Argument -> GraphQL.Engine.Optional arg"},{"name":"query","comment":" ","type":"GraphQL.Engine.Selection GraphQL.Engine.Query value -> { headers : List.List Http.Header, url : String.String, timeout : Maybe.Maybe Basics.Float, tracker : Maybe.Maybe String.String } -> Platform.Cmd.Cmd (Result.Result Http.Error value)"},{"name":"queryString","comment":" ","type":"GraphQL.Engine.Selection source data -> String.String"},{"name":"recover","comment":" ","type":"recovered -> (data -> recovered) -> GraphQL.Engine.Selection source data -> GraphQL.Engine.Selection source recovered"},{"name":"select","comment":" ","type":"data -> GraphQL.Engine.Selection source data"},{"name":"union","comment":" ","type":"List.List ( String.String, GraphQL.Engine.Selection source data ) -> GraphQL.Engine.Selection source data"},{"name":"with","comment":" ","type":"GraphQL.Engine.Selection source a -> GraphQL.Engine.Selection source (a -> b) -> GraphQL.Engine.Selection source b"}],"binops":[]}]